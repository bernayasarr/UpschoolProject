Araştırma Ödevleri:

Araştırma Projesi 1 - Lateinit
Araştırma Projesi 2 - Tools Namespace
Araştırma Projesi 3 - Font family XML
Araştırma Projesi 4 - Property Animation

ARAŞTIRMA PROJESİ 1
Sabit değer tanımlamak için kullanılır. Tanımlandıktan sonra tekrar değiştirilemez. Javadaki final’a denk gelir. var: Normal değişken tanımlamak için kullanılır. Tanımladıktan sonra dilediğinizde değerini değiştirebilirsiniz. Bazen bir değişken oluşturulurken değer atamak istemeyebiliriz. Bu durumda lateinit kullanılır. 
class LoginFragment : Fragment() {

private lateinit var usernameEditText: EditText	// değer atanmadı
private lateinit var passwordEditText: EditText
private lateinit var loginButton: Button
private lateinit var statusTextView: TextView

override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
    super.onViewCreated(view, savedInstanceState)

    usernameEditText = view.findViewById(R.id.username_edit_text)	// değer ataması gerçekleşti
    passwordEditText = view.findViewById(R.id.password_edit_text)
    loginButton = view.findViewById(R.id.login_button)
    statusTextView = view.findViewById(R.id.status_text_view)
}

...
}



ARAŞTIRMA PROJESİ 2
Namespacing does for functions and classes what scope does for variables. It allows you to use the same function or class name in different parts of the same program without causing a name collision. If we didn't have namespaces we'd have to (potentially) change a lot of code any time we added a library, or come up with tedious prefixes to make our function names unique. With namespaces, we can avoid the headache of naming collisions when mixing third-party code with our own projects.



ARAŞTIRMA PROJESİ 3
res altında directory ile font oluşturuyoruz. Daha sonra belirlediğimiz fontları içine atıyoruz ve font içinde bir xml dosyası oluşturuyoruz. Bu xml dosyası içinde de fontumuzun özelliklerini belirliyoruz(fontweight:400,fontstyle:"italic" gibi). Bu kullanımı tercih etmemizin sebebi ise kendi fontumuzu oluşturup projemizde rahatlıkla kullanabiliriz.


Kullanımı bu şekildedir:

<TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:fontFamily="@font/lobster"/>




ARAŞTIRMA PROJESİ 4
animator -> belirli bir süre boyunca bir animasyonu geçerli kılar.
onjectAnimator -> belirli bir süre boyunca bir nesnenin belirli bir özelliğini canlandırmak için kullanılır.



